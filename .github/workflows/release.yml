name: Build and Upload Sona

on:
  push:
    branches:
      - main
      - master

env:
  MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
  MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
  MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
  MINIO_BUCKET: artifact
  MINIO_FOLDER: sona

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            binary_name: sona-linux-amd64
          - os: linux
            arch: arm64
            binary_name: sona-linux-arm64
          - os: darwin
            arch: amd64
            binary_name: sona-darwin-amd64
          - os: darwin
            arch: arm64
            binary_name: sona-darwin-arm64
          - os: windows
            arch: amd64
            binary_name: sona-windows-amd64.exe
          - os: windows
            arch: arm64
            binary_name: sona-windows-arm64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build Sona
        run: |
          echo "Building Sona for ${{ matrix.os }}/${{ matrix.arch }}"
          
          # Build the binary
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build \
            -ldflags="-s -w" \
            -o ${{ matrix.binary_name }} \
            cmd/sona/main.go
          
          # Create checksum
          sha256sum ${{ matrix.binary_name }} > ${{ matrix.binary_name }}.sha256
          
          echo "Build completed: ${{ matrix.binary_name }}"

      - name: Upload to MinIO
        uses: lovellfelix/minio-deploy-action@v1
        with:
          endpoint: ${{ secrets.MINIO_ENDPOINT }}
          access_key: ${{ secrets.MINIO_ACCESS_KEY }}
          secret_key: ${{ secrets.MINIO_SECRET_KEY }}
          bucket: ${{ env.MINIO_BUCKET }}
          source_dir: '.'
          target_dir: '${{ env.MINIO_FOLDER }}'
          include: |
            ${{ matrix.binary_name }}
            ${{ matrix.binary_name }}.sha256
