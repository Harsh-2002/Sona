name: Build and Upload Sona

on:
  push:
    branches:
      - main
      - master

env:
  MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
  MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
  MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
  MINIO_BUCKET: artifact
  MINIO_FOLDER: sona

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            binary_name: sona-linux-amd64
          - os: linux
            arch: arm64
            binary_name: sona-linux-arm64
          - os: darwin
            arch: amd64
            binary_name: sona-darwin-amd64
          - os: darwin
            arch: arm64
            binary_name: sona-darwin-arm64
          - os: windows
            arch: amd64
            binary_name: sona-windows-amd64.exe
          - os: windows
            arch: arm64
            binary_name: sona-windows-arm64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build Sona
        run: |
          echo "Building Sona for ${{ matrix.os }}/${{ matrix.arch }}"
          
          # Build the binary
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build \
            -ldflags="-s -w" \
            -o ${{ matrix.binary_name }} \
            cmd/sona/main.go
          
          echo "Build completed: ${{ matrix.binary_name }}"

      - name: Setup MinIO Client
        run: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/local/bin/

      - name: Upload to MinIO
        run: |
          # Configure MinIO client
          mc alias set sona ${{ secrets.MINIO_ENDPOINT }} ${{ secrets.MINIO_ACCESS_KEY }} ${{ secrets.MINIO_SECRET_KEY }}
          
          # Create sona folder if it doesn't exist
          mc ls sona/${{ env.MINIO_BUCKET }}/${{ env.MINIO_FOLDER }}/ || mc mb sona/${{ env.MINIO_BUCKET }}/${{ env.MINIO_FOLDER }}
          
          # Upload binary
          mc cp ${{ matrix.binary_name }} sona/${{ env.MINIO_BUCKET }}/${{ env.MINIO_FOLDER }}/
          
          echo "Uploaded ${{ matrix.binary_name }} to MinIO"

      - name: Upload Website
        run: |
          mc cp website.html sona/${{ env.MINIO_BUCKET }}/${{ env.MINIO_FOLDER }}/
          echo "Uploaded website.html to MinIO"
