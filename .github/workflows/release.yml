name: Build and Release Sona

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
  MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
  MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
  MINIO_BUCKET: artifact
  MINIO_FOLDER: sona

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            binary_name: sona-linux-amd64
          - os: linux
            arch: arm64
            binary_name: sona-linux-arm64
          - os: darwin
            arch: amd64
            binary_name: sona-darwin-amd64
          - os: darwin
            arch: arm64
            binary_name: sona-darwin-arm64
          - os: windows
            arch: amd64
            binary_name: sona-windows-amd64.exe
          - os: windows
            arch: arm64
            binary_name: sona-windows-arm64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build Sona
        run: |
          echo "Building Sona ${{ steps.version.outputs.version }} for ${{ matrix.os }}/${{ matrix.arch }}"
          
          # Build the binary
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build \
            -ldflags="-s -w -X main.version=${{ steps.version.outputs.version }}" \
            -o ${{ matrix.binary_name }} \
            cmd/sona/main.go
          
          # Create checksum
          sha256sum ${{ matrix.binary_name }} > ${{ matrix.binary_name }}.sha256
          
          echo "Build completed: ${{ matrix.binary_name }}"

      - name: Setup MinIO Client
        run: |
          # Install MinIO client
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/local/bin/

      - name: Configure MinIO
        run: |
          # Configure MinIO client
          mc alias set sona ${{ env.MINIO_ENDPOINT }} ${{ env.MINIO_ACCESS_KEY }} ${{ env.MINIO_SECRET_KEY }}

      - name: Create folder if not exists
        run: |
          # Create sona folder in bucket if it doesn't exist
          mc ls sona/${{ env.MINIO_BUCKET }}/${{ env.MINIO_FOLDER }}/ || \
          mc mb sona/${{ env.MINIO_BUCKET }}/${{ env.MINIO_FOLDER }}

      - name: Upload to MinIO
        run: |
          # Upload binary and checksum
          mc cp ${{ matrix.binary_name }} sona/${{ env.MINIO_BUCKET }}/${{ env.MINIO_FOLDER }}/
          mc cp ${{ matrix.binary_name }}.sha256 sona/${{ env.MINIO_FOLDER }}/
          
          echo "Uploaded ${{ matrix.binary_name }} to MinIO"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: |
            ${{ matrix.binary_name }}
            ${{ matrix.binary_name }}.sha256

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*/sona-*
            artifacts/*/sona-*.sha256
          generate_release_notes: true
          draft: false
          prerelease: false
